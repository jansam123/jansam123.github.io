<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Samuel Jankovych</title><link>https://samueljankovych.com/</link><description>Recent content on Samuel Jankovych</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 08 Dec 2024 08:06:25 +0600</lastBuildDate><atom:link href="https://samueljankovych.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Programovanie pre fyzikov</title><link>https://samueljankovych.com/posts/prog_fyz/</link><pubDate>Sun, 08 Dec 2024 08:06:25 +0600</pubDate><guid>https://samueljankovych.com/posts/prog_fyz/</guid><description>&lt;p>Vojtova webstránka: &lt;a href="https://ipnp.cz/?page_id=8042&amp;amp;lang=CZ" target="_blank" rel="noopener">ipnp.cz/?page_id=8042&amp;amp;lang=CZ&lt;/a>&lt;/p>
&lt;h2 id="prezentácia">Prezentácia&lt;/h2>
&lt;ul>
&lt;li>Prezentácia a príklady v Jupyter notebooku: &lt;a href="prop_chyb.ipynb">prop_chyb.ipynb&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="príklady">Príklady&lt;/h2>
&lt;ul>
&lt;li>Príklady od Vojtecha k propagácii chýb: &lt;a href="uncertainty_propagation_examples.py">uncertainty_propagation_examples.py&lt;/a>&lt;/li>
&lt;li>Skript z minulého cvičenia (iba na import plot funkcie): &lt;a href="fits_examples.py">fits_examples.py&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="odporúčané-predmety">Odporúčané predmety&lt;/h2>
&lt;h3 id="základy-programovania">Základy programovania&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Použití počítačů ve fyzice&lt;/strong> &lt;a href="https://is.cuni.cz/studium/predmety/index.php?do=predmet&amp;amp;kod=NOFY084" target="_blank" rel="noopener">NOFY084&lt;/a> - praktické fyzikálne príkady, vhodné na zlepšenie rutiny programovania (v Pythone), KZ za úlohy&lt;/li>
&lt;li>&lt;strong>Programování a zpracování dat v Pythonu&lt;/strong> &lt;a href="https://is.cuni.cz/studium/predmety/index.php?do=predmet&amp;amp;kod=NOFY178" target="_blank" rel="noopener">NOFY178&lt;/a> - vyššia úroveň programovania v Pythone (triedy, dekorátory,&amp;hellip;), vhodné na zlepšenie dizajnu kódu, KZ za úlohy&lt;/li>
&lt;/ul>
&lt;h3 id="strojové-učenie-ai">Strojové učenie (AI)&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Strojové učení v částicové fyzice&lt;/strong> &lt;a href="https://is.cuni.cz/studium/predmety/index.php?do=predmet&amp;amp;kod=NJSF164" target="_blank" rel="noopener">NJSF164&lt;/a> - základy hlbokého učenia formou príkladov, vhodné aj pre začiatočnikov strojového učenia, moderné techniky AI, vhodné pre všetkých (nielen časticová fyzika), Zk za úkoly&lt;/li>
&lt;li>&lt;strong>Úvod do strojového učení v Pythonu&lt;/strong> &lt;a href="https://is.cuni.cz/studium/eng/predmety/index.php?do=predmet&amp;amp;kod=NPFL129" target="_blank" rel="noopener">NPFL129&lt;/a> - strojové učenie, príklady+teória, náročejšie, témy do hĺbky, nie moderné techniky AI (skorej klasické), Zk písomná, Z za úlohy, &lt;a href="https://ufal.mff.cuni.cz/courses/npfl129/2425-winter" target="_blank" rel="noopener">viac info&lt;/a>&lt;/li>
&lt;li>&lt;strong>Hluboké učení&lt;/strong> &lt;a href="https://is.cuni.cz/studium/eng/predmety/index.php?do=predmet&amp;amp;kod=NPFL138" target="_blank" rel="noopener">NPFL138&lt;/a> - hlboké učenie, príklady+teória, náročné, témy do hĺbky, najmodernejšie techniky AI, Z za úlohy, Zk písomná alebo v prípade splnenia všetkých úloh rovno za 1, &lt;a href="https://ufal.mff.cuni.cz/courses/npfl138/2324-summer" target="_blank" rel="noopener">viac info&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="some-random-linkhttpscernboxcernchswiebtviikkf6uke">&lt;a href="https://cernbox.cern.ch/s/WIEBTViIkkf6UkE" target="_blank" rel="noopener">Some random link&lt;/a>&lt;/h2>
&lt;p>&lt;img src="https://samueljankovych.com/posts/prog_fyz/meme.jpg" alt="Meme">&lt;/p></description></item><item><title>Setup MFF UK GPULab</title><link>https://samueljankovych.com/posts/gpulab/</link><pubDate>Sun, 18 Sep 2022 08:06:25 +0600</pubDate><guid>https://samueljankovych.com/posts/gpulab/</guid><description>&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ol>
&lt;li>Get a CAS login.&lt;/li>
&lt;li>Login to gpulab using CAS login, follow this &lt;a href="https://gitlab.mff.cuni.cz/mff/hpc/clusters#installed-software-on-clusters" target="_blank" rel="noopener">guide&lt;/a>.&lt;/li>
&lt;/ol>
&lt;h2 id="charliecloud-image">Charliecloud image&lt;/h2>
&lt;ol start="3">
&lt;li>Log into a gpu node
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>srun -p gpu-ffa --gpus&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> --time&lt;span style="color:#f92672">=&lt;/span>5:00:00 --pty bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Pull nvidia docker image with Charliecloud
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ch-image pull tensorflow/tensorflow:latest-gpu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Convert the docker image to charliecloud image expressed as a directory &lt;code>./my-tf&lt;/code>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ch-convert -i ch-image -o dir tensorflow/tensorflow:latest-gpu ./my-tf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Import CUDA libraries
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ch-fromhost --nvidia ./my-tf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Launch the container
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> ch-run -w -c /home/jankovys --bind&lt;span style="color:#f92672">=&lt;/span>/home/jankovys -u &lt;span style="color:#ae81ff">0&lt;/span> -g &lt;span style="color:#ae81ff">0&lt;/span> ./my-tf -- bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>The command above will launch the container with working directory &lt;code>/home/jankovys&lt;/code> and write access to the container (&lt;code>-w&lt;/code>). The &lt;code>--bind=/home/jankovys&lt;/code> option will bind the &lt;code>/home/jankovys&lt;/code> directory on the host to the &lt;code>/home/jankovys&lt;/code> directory in the container. The &lt;code>-u 0 -g 0&lt;/code> options will run the container as root user. The &lt;code>--&lt;/code> at the end of the command tells ch-run that the command to run in the container follows.&lt;/p></description></item><item><title>TBrowser in docker container</title><link>https://samueljankovych.com/posts/tbrowser/</link><pubDate>Sun, 18 Sep 2022 08:06:25 +0600</pubDate><guid>https://samueljankovych.com/posts/tbrowser/</guid><description>&lt;h2 id="set-up">Set up&lt;/h2>
&lt;ol start="0">
&lt;li>Install &lt;a href="https://docs.docker.com/get-docker/" target="_blank" rel="noopener">Docker&lt;/a>&lt;/li>
&lt;li>Pull the &lt;a href="https://hub.docker.com/r/rootproject/root" target="_blank" rel="noopener">ROOT&lt;/a> (rootproject/root:6.26.06-ubuntu22.04) docker image:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker pull rootproject/root:6.26.06-ubuntu22.04
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Run the docker image:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run -p 9200:9200 --rm -d -it -v ~/host/dir:/container/dir --name TBrowser rootproject/root:6.26.06-ubuntu22.04 root -l --web&lt;span style="color:#f92672">=&lt;/span>server:9200 /opt/root/tutorials/v7/browser.cxx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>-p 9200:9200&lt;/code> maps the port 9200 of the host to the port 9200 of the container&lt;/li>
&lt;li>&lt;code>--rm&lt;/code> removes the container after it exits&lt;/li>
&lt;li>&lt;code>-d&lt;/code> runs the container in the background&lt;/li>
&lt;li>&lt;code>-it&lt;/code> runs the container in interactive mode&lt;/li>
&lt;li>&lt;code>-v ~/host/dir:/container/dir&lt;/code> mounts the host directory &lt;code>~/host/dir&lt;/code> to the container directory &lt;code>/container/dir&lt;/code>&lt;/li>
&lt;li>&lt;code>--name TBrowser&lt;/code> names the container &lt;code>TBrowser&lt;/code>&lt;/li>
&lt;li>&lt;code>rootproject/root:latest&lt;/code> is the docker image&lt;/li>
&lt;li>&lt;code>root -l --web=server:9200 /opt/root/tutorials/v7/browser.cxx&lt;/code> runs the ROOT TBrowser in the container&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Open a web browser and go to &lt;a href="https://localhost:9200/win1" target="_blank" rel="noopener">&lt;code>localhost:9200/win1&lt;/code>&lt;/a> to see the TBrowser:&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://samueljankovych.com/posts/tbrowser/TBrowser_screenshot.jpg" alt="TBrowser screenshot">&lt;/p></description></item><item><title>Tips and Tricks</title><link>https://samueljankovych.com/posts/tips_and_tricks/</link><pubDate>Sun, 18 Sep 2022 08:06:25 +0600</pubDate><guid>https://samueljankovych.com/posts/tips_and_tricks/</guid><description>&lt;h1 id="tips-and-tricks">Tips and Tricks&lt;/h1>
&lt;h2 id="gitlatexdiffhttpstwikicernchtwikibinviewauthatlasprotectedpubcomlatexdiffgit_latexdiff_command">&lt;a href="https://twiki.cern.ch/twiki/bin/viewauth/AtlasProtected/PubComLaTeXDiff#git_latexdiff_command" target="_blank" rel="noopener">Git+latexdiff&lt;/a>&lt;/h2>
&lt;p>Generate a latexdiff between two commits&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git latexdiff 0db4b84289f7554810cfdaacf7bafdbab23466b2 -- --main ANA-JETM-2023-07-PUB.tex
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Jet Identification Deep Neural Network</title><link>https://samueljankovych.com/posts/jidenn/</link><pubDate>Fri, 16 Sep 2022 08:06:25 +0600</pubDate><guid>https://samueljankovych.com/posts/jidenn/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This is a deep neural network for jet identification.&lt;/p>
&lt;h2 id="data">Data&lt;/h2>
&lt;h2 id="architecture">Architecture&lt;/h2></description></item><item><title/><link>https://samueljankovych.com/posts/arch_linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://samueljankovych.com/posts/arch_linux/</guid><description>&lt;h1 id="arch-linux-installationhttpswikiarchlinuxorgtitleinstallation_guide">&lt;a href="https://wiki.archlinux.org/title/installation_guide" target="_blank" rel="noopener">Arch Linux Installation&lt;/a>&lt;/h1>
&lt;h2 id="download-the-iso-image">Download the ISO image&lt;/h2>
&lt;p>Download the latest Arch Linux ISO from &lt;a href="https://archlinux.org/download/" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;h2 id="create-empty-disk-image">Create empty disk image&lt;/h2>
&lt;p>Create the empty file with filled zeros of size 64GB:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dd &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">=&lt;/span>/dev/zero of&lt;span style="color:#f92672">=&lt;/span>bios.img bs&lt;span style="color:#f92672">=&lt;/span>2G count&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="boot-the-iso-imagehttpswikiarchlinuxorgtitleqemubooting_in_uefi_mode">&lt;a href="https://wiki.archlinux.org/title/QEMU#Booting_in_UEFI_mode" target="_blank" rel="noopener">Boot the ISO image&lt;/a>&lt;/h2>
&lt;p>Make sure to have the &lt;code>OVMF&lt;/code> package installed:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pacman -S ovmf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This package contains the UEFI firmware for QEMU.
Copy the UEFI firmware to the current directory:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cp /usr/share/edk2/x64/OVMF_VARS.fd .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Boot the ISO image with QEMU:&lt;/p></description></item></channel></rss>